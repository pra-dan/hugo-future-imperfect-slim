<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Hugo Future Imperfect Slim en français</title>
    <link>pra-dan.github.io/fr/blog/</link>
    <description>Recent content in Blog on Hugo Future Imperfect Slim en français</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Mon, 11 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="pra-dan.github.io/fr/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Guide de syntaxe de Markdown</title>
      <link>pra-dan.github.io/fr/blog/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>pra-dan.github.io/fr/blog/markdown-syntax/</guid>
      <description>&lt;p&gt;Cet article propose un exemple de syntaxe de base de Markdown pouvant être utilisée dans les fichiers de contenu Hugo. Il indique également si les éléments HTML de base sont décorés avec CSS dans un thème Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>pra-dan.github.io/fr/blog/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>pra-dan.github.io/fr/blog/emoji-support/</guid>
      <description>Emoji peut être activé dans un projet Hugo de plusieurs manières.
La fonction [emojify] (https://gohugo.io/functions/emojify/) peut être appelée directement dans les modèles ou [Inline Shortcodes] (https://gohugo.io/templates/shortcode-templates/#inline- codes courts).
Pour activer globalement emoji, définissez enableEmoji sur true dans la [configuration] de votre site (https://gohugo.io/getting-started/configuration/), puis vous pourrez taper des codes abrégés emoji directement dans les fichiers de contenu; par exemple.
Le [aide-mémoire Emoji] (http://www.emoji-cheat-sheet.com/) est une référence utile pour les codes abrégés emoji.</description>
    </item>
    
    <item>
      <title>Decoding YOLOv3 output with Intel OpenVINO&#39;s backend</title>
      <link>pra-dan.github.io/fr/blog/rich-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>pra-dan.github.io/fr/blog/rich-content/</guid>
      <description>&lt;h1 id=&#34;decoding-yolov3-output-with-intel-openvinos-backend&#34;&gt;Decoding YOLOv3 output with Intel OpenVINO&amp;rsquo;s backend&lt;/h1&gt;
&lt;h2 id=&#34;ok&#34;&gt;ok&lt;/h2&gt;
&lt;h3 id=&#34;oks&#34;&gt;oks&lt;/h3&gt;
&lt;p&gt;More to it&lt;/p&gt;
&lt;p&gt;Code: &lt;code&gt;git&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;more code
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then indent&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;indentation of no use&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ok then &lt;em&gt;italics&lt;/em&gt; and &lt;strong&gt;bold&lt;/strong&gt;
Hugo est livré avec plusieurs [Shortcodes intégrés] (&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;&gt;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&lt;/a&gt;) pour un contenu riche, ainsi qu&amp;rsquo;une [Privacy Config] ( &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;https://gohugo.io/about/hugo-and-gdpr/&lt;/a&gt;) et un ensemble de codes courts simples qui permettent des versions statiques et sans JS de diverses intégrations de médias sociaux.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>